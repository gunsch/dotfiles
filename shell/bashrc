#####################################
# Shell setup entrypoint for bash.

# Used in dotfile scripts.
export CURRENT_SHELL="bash"

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=200000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ -f ~/dotfiles/shell/aliases ]; then
  . ~/dotfiles/shell/aliases
fi

# This needs to stay after fasd setup for valid return codes.
# Color-prompt.
export PROMPT_COMMAND=__prompt_command
#export __LOCAL_PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]\$\[\033[01;34m\]\w\[\033[00m\]\$ '
export __LOCAL_PS1='${debian_chroot:+($debian_chroot)}'
__LOCAL_PS1+='[\[\033[01;36m\]\A\[\033[00m\]] '
__LOCAL_PS1+='[\[\033[01;32m\]\u@\h\[\033[00m\]] '
__LOCAL_PS1+='[\[\033[01;34m\]\w\[\033[00m\]] '
__LOCAL_PS1+='\n$ '
function __prompt_command() {
    status="$?";
    PS1="";
    if [ $status -ne 0 ]; then
        PS1+='[\[\033[01;31m\]';
        PS1+="$status";
        PS1+='\[\033[00m\]] '
    fi
    PS1+=$__LOCAL_PS1;

    local TITLE_BAR="";
    if [[ -n "$TERM_TITLE" ]]; then
      TITLE_BAR="${TERM_TITLE}"
    else
      ####################################################
      # Set an interesting title with some useful info.
      # Look through GYP_DEFINES for info.
      local GYP_OS="linux"
      local GYP_ARCH="x86"
      local GYP_CHROMECAST_BRANDING=""
      local GYP_TITLE=""
      local GYP_PRODUCT=""
      local TMP_IFS=$IFS
      unset IFS
      for x in $GYP_DEFINES; do
        local key=${x%=*};
        local value=${x##*=};
        if [[ $key = "OS" ]]; then
          GYP_OS=$value
        fi
        if [[ $key = "target_arch" ]]; then
          if [[ $value = "ia32" ]]; then
            GYP_ARCH="x86"
          else
            GYP_ARCH=$value
          fi
        fi
        if [[ $key = "chromecast_branding" ]]; then
          if [[ $value = "public" ]]; then
            GYP_CHROMECAST_BRANDING="public"
          fi
        fi
        if [[ $key = "chromecast_target_product" ]]; then
          GYP_PRODUCT="$value";
        fi
      done
      IFS=$TMP_IFS

      if [[ -n "$GYP_CHROMECAST_BRANDING" && -n "$GYP_OS" ]]; then
        TITLE_BAR="${GYP_OS} ${GYP_CHROMECAST_BRANDING} ${GYP_ARCH} ${GYP_PRODUCT}";
      fi
      ####################################################
    fi

    if [[ -n "${TITLE_BAR}" ]]; then
      PS1+="\[\e]2;${TITLE_BAR}\a\]";
      #PS1+="\[\033]0;${TITLE_BAR}\007\]";
    fi

    return $status;
}

function set_title() {
  if [[ $# -lt 1 ]]; then
    unset TERM_TITLE;
  else
    export TERM_TITLE="$@";
  fi
}

if [[ -e /usr/local/bin/virtualenvwrapper.sh ]]; then
  echo "Loading virtualenvwrapper...";
  export WORKON_HOME=$HOME/.virtualenvs
  export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
  source /usr/local/bin/virtualenvwrapper_lazy.sh
fi

# Bash-specific aliases.
alias resource="vi ~/.bashrc && source ~/.bashrc"
alias sz="source ~/.bashrc"

# Include path-completion scripts for everything
test -e "${HOME}/google-cloud-sdk/path.bash.inc" && source "${HOME}/google-cloud-sdk/path.bash.inc"
test -e "${HOME}/google-cloud-sdk/completion.bash.inc" && source "${HOME}/google-cloud-sdk/completion.bash.inc"
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
test -e "/etc/profile.d/undistract-me.sh" && source /etc/profile.d/undistract-me.sh
test -e "${HOME}/.fzf.bash" && source "${HOME}/.fzf.bash"

