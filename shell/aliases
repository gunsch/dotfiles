###########################################
# Main entry point for loading aliases and other shell configurations.

###########################################
## Constants

if [ "$CURRENT_SHELL" = "bash" ]; then
  SCRIPT_PATH="${BASH_SOURCE[0]}"
else
  SCRIPT_PATH="$0"
fi

HOSTNAME="$(hostname -s)"
SHELLDIR="$(dirname $SCRIPT_PATH)"
OSNAME="$(uname -s)"
HOMEDIR="$(cd ~ && pwd -P)"

# Constant paths.
export PATH="/usr/local/bin:${PATH}"
export PATH="/usr/local/sbin:${PATH}"
export PATH="${PATH}:${HOMEDIR}/bin"
export PATH="${PATH}:${HOMEDIR}/go/bin"
export PATH="${PATH}:${HOMEDIR}/depot_tools"
if [ -d "${HOMEDIR}/bin/proprietary" ]; then
  export PATH="${PATH}:${HOMEDIR}/bin/proprietary"
fi

# System-wide constants.
export GREP_COLOR='1;32'
export EDITOR='vi'

###########################################
## Other files to load

# Common source sets
. "${SHELLDIR}/git"             # Git aliases
. "${SHELLDIR}/npm"             # NPM aliases/autocomplete

# Source hostname-specific rules.
if [ -f "${SHELLDIR}/host/${HOSTNAME}" ]; then
  echo "Loading host config for ${HOSTNAME}";
  . "${SHELLDIR}/host/${HOSTNAME}";
fi

# Source OS-specific rules.
if [ -f "${SHELLDIR}/os/${OSNAME}" ]; then
  echo "Loading OS config for ${OSNAME}";
  . "${SHELLDIR}/os/${OSNAME}";
fi

# Source proprietary rules.
if [ -d "${SHELLDIR}/proprietary" ]; then
  for proprietary_file in "${SHELLDIR}/proprietary/"*; do
    echo "Loading ${proprietary_file}";
    . "${proprietary_file}";
  done
fi

###########################################
## Assorted aliases.
## Move to their own files as categories emerge.

# Files/command-line stuff
alias histfind='history -n 100 | egrep'
alias duh='du -h | egrep "^[0-9. ]+G"'
alias dum='du -h | egrep "^[0-9. ]+M"'

# LS aliases. Assume ls-color is set by OS-specific.
alias ls="ls-color -h"
alias l="ls -lF"
alias la="ls -A"
alias ll="ls -alF"
alias lr="ls -lrt"

# Faster navigation.
cu() { if [ "$1" = "" ]; then cd ..; else for i in `seq 1 $1`; do cd ..; done; fi } 

# Prefer htop if available.
if which htop 2&>/dev/null; then
  alias top="htop"
fi

# Screen/byobu
alias rescreen='screen -raAd'
alias bs="byobu new -s"
alias br="byobu-select-session"
alias bl="byobu list-sessions"

# Searching/replacing.
alias ackgyp='ack --type=gyp'
alias ackjs='ack --type=js'
alias ackjava='ack --type=java'
alias ackcc='ack --type=cpp'
alias ackmk='ack --type=make'
alias ackpy='ack --type=python'

# Alternative tools, many from https://remysharp.com/2018/08/23/cli-improved
alias cat='bat'
alias ping='prettyping --nolegend'
alias preview="fzf --preview 'bat --color \"always\" {}'"
# add support for ctrl+o to open selected file in VSCode 
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(code {})+abort'"
alias du="ncdu -rr -x --exclude .git --exclude node_modules"

function ack_replace() {
  if ! git diff-files --quiet --ignore-submodules; then
    echo "No unstaged changes before using ack_replace.";
    return -1;
  fi
  ack_replace_unsafe $@
  # Show git diff, because that's what you'll do anyways :)
  git diff;
}

function ack_replace_unsafe() {
  if [ $# -ne 2 ]; then
    echo "Usage: ack_replace <find> <replace>";
    return -1;
  fi
  ack "$1" -l | xargs perl -i -pe "s#$1#$2#g";
}

put () {
  if [[ $# -lt 1 ]]; then echo "needs arg"; return 1; fi;
  rsync -avz --partial --progress --recursive --rsh='ssh -p 37912' $@ gunsch@qxlp.net:/var/transfer/
}
get () {
  if [[ $# -lt 1 ]]; then echo "needs arg"; return 1; fi;
  rsync -avz --partial --progress --recursive --rsh='ssh -p 37912' gunsch@qxlp.net:/var/transfer/$@ .
}
upload() {
  if [[ $# -lt 1 ]]; then echo "needs arg"; return 1; fi;
  rsync -avz --partial --progress --recursive --rsh='ssh -p 37912' $@ gunsch@qxlp.net:/srv/qxlp.net/u/public_html/
}

# TODO:
# JS shell scripts. (Where/how to best store JARs? Download to download/jar/).
